
@using PagedList;
@using PagedList.Mvc;


@model IPagedList<E_Commerce_Site.Models.Tag>
<br />
<p>
    @Html.ActionLink("Create New Tag", "Create", null, new { @class = "btn btn-warning" })
</p>

<p>
    @using (Html.BeginForm("Index", "Tags", FormMethod.Get))
    {
        <b>Search by:</b><br />

        <div>
            @Html.RadioButton("searchBy", "TagName", true)<text class="col-md-6">Tag Name </text>
        </div>
        <div>
            @Html.RadioButton("searchBy", "TagId")<text class="col-md-6">Tag Id </text>
        </div>

        <div class="col-md-12" >
            @Html.TextBox("search")<input type="submit" value="Search" />
        </div>

    }

</p>

<table class="table table-bordered  table-hover table-responsive">
    <tr>
        <th>
            @Html.ActionLink("Tag Id", "Index", new { sortBy = ViewBag.SortTagIdParameter, searchBy = Request.QueryString["searchBy"], search = Request["search"] }, new { style = "color:green" })
              </th>
        <th>
            @Html.ActionLink("Tag Name", "Index", new { sortBy = ViewBag.SortTagNameParameter, searchBy = Request.QueryString["searchBy"], search = Request["search"] }, new { style = "color:green" })
                 </th>

    </tr>

    @if (Model.Count() == 0)
    {
        <tr>
            <td colspan="3"> No rows matched search criteria   </td>
        </tr>
    }
    else
    {
        foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.TagId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TagName)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.TagId }, new { @style = "color:green;" }) |
                    @Html.ActionLink("Details", "Details", new { id = item.TagId }, new { @style = "color:blue;" }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.TagId }, new { @style = "color:red;" })
                </td>
            </tr>
        }
    }
</table>
@Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"], sortBy = Request["sortBy"] }),
    new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true, DisplayItemSliceAndTotal = true })
