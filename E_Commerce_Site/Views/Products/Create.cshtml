@model E_Commerce_Site.Models.Product

@{
    ViewBag.Title = "Create";
}



@Styles.Render("~/content/selectize")
@Scripts.Render("~/bundles/selectize")


<style>
    .field-validation-valid {
        display: none;
    }


</style>

@using (Html.BeginForm("Create", "Products", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Creating Product</h4>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group ">
            <div class="col-md-12">
                @Html.LabelFor(model => model.ProductName, "Product Name", htmlAttributes: new { @class = "control-label" })
            </div>     <div class="col-md-12">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" , required = "required" } })
                @Html.ValidationMessageFor(model => model.ProductName, "Product Name is required", new { @class = "text-danger",style=".validation-summary-valid { display:none; }" })
            </div>
        </div>
        @if (ViewBag.Message != null)
        {
        <span style="color:red">@ViewBag.Message</span>
        }


        <div class="form-group">
            <div class="col-md-12">
                @Html.ActionLink("Add Image", "AddImage", Model, new { @class = "btn btn-success col-md-12"})
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.PriceCad, htmlAttributes: new { @class = "control-label" })
            </div>        <div class="col-md-12">
                @Html.EditorFor(model => model.PriceCad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PriceCad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.PriceInr, htmlAttributes: new { @class = "control-label" })
            </div>        <div class="col-md-12">
                @Html.EditorFor(model => model.PriceInr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PriceInr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group ">
            <div class="col-md-12">
                @Html.LabelFor(model => model.ProductDescription, "Product Description", htmlAttributes: new { @class = "control-label " })
            </div>    <div class="col-md-12">
                @Html.TextAreaFor(model => model.ProductDescription,8 ,60,new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">

                @Html.LabelFor(model => model.ShippingCost, "Shipping Cost", htmlAttributes: new { @class = "control-label" })
            </div>       <div class="col-md-12">
                @Html.EditorFor(model => model.ShippingCost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShippingCost, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Discount, "Discount %", htmlAttributes: new { @class = "control-label"})
            </div><div class="col-md-12">
                @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control", type = "number", min = "0", max = "100" } })
                @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.SubCategoryId, "Sub-Category Name", htmlAttributes: new { @class = "control-label " })
            </div>     <div class="col-md-12">
                @Html.DropDownList("SubCategoryId", null, "Select A Sub-Category", htmlAttributes: new { @class = "demo-default", id = "SubCategoryId", required = "required" })
                @Html.ValidationMessageFor(model => model.SubCategoryId, "You Must select A Sub-Category", new { @class = "text-danger" })
            </div>
        </div>
  


        <div class="form-group  col-md-12">
            <div class="control-group">
                <label for="TagListSelect">Choose Tags:</label>
                <select id="TagListSelect" name="TagListSelect" multiple="multiple" class="demo-default" style="width:100%" placeholder="Select a tag...">

                    @for (int i = 0; i < Model.TagList.Count(); i++)
                {
                        <option value="@Model.TagList[i].TagId">@Model.TagList[i].TagName</option>}

                </select>
            </div>
        </div>
            <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.IsVisibleOnHome, "Is Visible on Homepage?", htmlAttributes: new { @class = "control-label " })
            </div>   
                  <div class="checkbox col-md-2">
                @Html.EditorFor(model => model.IsVisibleOnHome)
                @Html.ValidationMessageFor(model => model.IsVisibleOnHome, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
            @if (Model.ImageList != null)
            {
                for (int i = 0; i < Model.ImageList.Count(); i++)
                {<div lass="col-md-12" style="padding-bottom:185px" >
                <div class="col-md-6">
                    @Html.Label("Color Name:")  @*@Model.ImageList[i].ColorId.ToString()*@

                    @foreach (var item in ViewBag.ColorNames as Dictionary<int, String>)
                    {
                        if (item.Key == Model.ImageList.ElementAt(i).ColorId)
                        {
                            <span> @item.Value </span>}
                    }
                    
                    
                    
                    <br />
                    @Html.Label("Image Angle:") @Model.ImageList[i].ImageAngle<br /><br />
                    @Html.ActionLink("Delete", "DeleteImage", Model.ImageList[i], new { @class = "btn btn-danger" })<br />
                </div>

                <div class="col-md-6"><img src="@Model.ImageList[i].Address" height="175" /> </div> <br />
            </div>
                }
            }
      
        <div class="form-group col-md-12">
            <input type="submit" value="Create" class="btn btn-success col-md-7" />

       <span class=" col-md-1"></span>
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-warning col-md-4" })
        </div>
      
    </div>


}

    <script>
        $('#TagListSelect').selectize({
            maxItems: 99
        });
        $('#SubCategoryId').selectize({
            allowEmptyOption: false,
            maxItems: 1




        });



    </script>